var _user$project$PhotoGroove$sizeToString = function (size) {
	var _p0 = size;
	switch (_p0.ctor) {
		case 'Small':
			return 'small';
		case 'Medium':
			return 'med';
		default:
			return 'large';
	}
};
var _user$project$PhotoGroove$urlPrefix = 'http://elm-in-action.com/';
var _user$project$PhotoGroove$viewLarge = function (maybeUrl) {
	var _p1 = maybeUrl;
	if (_p1.ctor === 'Nothing') {
		return _elm_lang$html$Html$text(' ');
	} else {
		return A2(
			_elm_lang$html$Html$img,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('large'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$src(
						A2(
							_elm_lang$core$Basics_ops['++'],
							_user$project$PhotoGroove$urlPrefix,
							A2(_elm_lang$core$Basics_ops['++'], 'large/', _p1._0))),
					_1: {ctor: '[]'}
				}
			},
			{ctor: '[]'});
	}
};
var _user$project$PhotoGroove$Photo = function (a) {
	return {url: a};
};
var _user$project$PhotoGroove$Model = F4(
	function (a, b, c, d) {
		return {photos: a, selectedUrl: b, loadingError: c, chosenSize: d};
	});
var _user$project$PhotoGroove$Large = {ctor: 'Large'};
var _user$project$PhotoGroove$Medium = {ctor: 'Medium'};
var _user$project$PhotoGroove$initialModel = {
	photos: {ctor: '[]'},
	selectedUrl: _elm_lang$core$Maybe$Nothing,
	loadingError: _elm_lang$core$Maybe$Nothing,
	chosenSize: _user$project$PhotoGroove$Medium
};
var _user$project$PhotoGroove$photoArray = _elm_lang$core$Array$fromList(_user$project$PhotoGroove$initialModel.photos);
var _user$project$PhotoGroove$randomPhotoPicker = A2(
	_elm_lang$core$Random$int,
	0,
	_elm_lang$core$Array$length(_user$project$PhotoGroove$photoArray) - 1);
var _user$project$PhotoGroove$getPhotoUrl = function (index) {
	var _p2 = A2(_elm_lang$core$Array$get, index, _user$project$PhotoGroove$photoArray);
	if (_p2.ctor === 'Just') {
		return _elm_lang$core$Maybe$Just(_p2._0.url);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _user$project$PhotoGroove$Small = {ctor: 'Small'};
var _user$project$PhotoGroove$SetSize = function (a) {
	return {ctor: 'SetSize', _0: a};
};
var _user$project$PhotoGroove$viewSizeChooser = function (size) {
	return A2(
		_elm_lang$html$Html$label,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('radio'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$name('size'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_user$project$PhotoGroove$SetSize(size)),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					_user$project$PhotoGroove$sizeToString(size)),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$PhotoGroove$SurpriseMe = {ctor: 'SurpriseMe'};
var _user$project$PhotoGroove$SelectByIndex = function (a) {
	return {ctor: 'SelectByIndex', _0: a};
};
var _user$project$PhotoGroove$update = F2(
	function (msg, model) {
		var _p3 = msg;
		switch (_p3.ctor) {
			case 'SelectByIndex':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							selectedUrl: _user$project$PhotoGroove$getPhotoUrl(_p3._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SelectByUrl':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							selectedUrl: _elm_lang$core$Maybe$Just(_p3._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SurpriseMe':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_elm_lang$core$Random$generate, _user$project$PhotoGroove$SelectByIndex, _user$project$PhotoGroove$randomPhotoPicker)
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{chosenSize: _p3._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$PhotoGroove$SelectByUrl = function (a) {
	return {ctor: 'SelectByUrl', _0: a};
};
var _user$project$PhotoGroove$viewThumbnail = F2(
	function (selectedUrl, thumbnail) {
		return A2(
			_elm_lang$html$Html$img,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$src(
					A2(_elm_lang$core$Basics_ops['++'], _user$project$PhotoGroove$urlPrefix, thumbnail.url)),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$classList(
						{
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'selected',
								_1: _elm_lang$core$Native_Utils.eq(
									selectedUrl,
									_elm_lang$core$Maybe$Just(thumbnail.url))
							},
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							_user$project$PhotoGroove$SelectByUrl(thumbnail.url)),
						_1: {ctor: '[]'}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$PhotoGroove$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('content'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Photo Groove'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$PhotoGroove$SurpriseMe),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Surprise Me!'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h3,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('some thumbnail sizes'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$id('choose-size'),
								_1: {ctor: '[]'}
							},
							A2(
								_elm_lang$core$List$map,
								_user$project$PhotoGroove$viewSizeChooser,
								{
									ctor: '::',
									_0: _user$project$PhotoGroove$Small,
									_1: {
										ctor: '::',
										_0: _user$project$PhotoGroove$Medium,
										_1: {
											ctor: '::',
											_0: _user$project$PhotoGroove$Large,
											_1: {ctor: '[]'}
										}
									}
								})),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$id('thumbnails'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class(
											_user$project$PhotoGroove$sizeToString(model.chosenSize)),
										_1: {ctor: '[]'}
									}
								},
								A2(
									_elm_lang$core$List$map,
									_user$project$PhotoGroove$viewThumbnail(model.selectedUrl),
									model.photos)),
							_1: {
								ctor: '::',
								_0: _user$project$PhotoGroove$viewLarge(model.selectedUrl),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$PhotoGroove$main = _elm_lang$html$Html$program(
	{
		init: {ctor: '_Tuple2', _0: _user$project$PhotoGroove$initialModel, _1: _elm_lang$core$Platform_Cmd$none},
		view: _user$project$PhotoGroove$view,
		update: _user$project$PhotoGroove$update,
		subscriptions: function (model) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
